<template>
  <div class="sidebar">
    <h2>全部产品分类</h2>
    <ul class="tech-nav">
      <li v-for="(category, id) in categories" 
          :key="id" 
          class="nav-item"
          @mouseenter="showSubmenu" 
          @mouseleave="handleMouseLeave">
        <span class="nav-item-title">
          {{ category.name }}
          <span class="arrow">›</span>
        </span>
        <ul class="dropdown-menu" @mouseenter="showSubmenu" @mouseleave="handleMouseLeave">
          <li v-for="subCategory in category.sub_categories" :key="subCategory.tid">
            <div class="submenu-item">
              <span class="subcategory-name">{{ subCategory.name }}</span>
              <div class="product-list">
                <router-link 
                  v-for="product in subCategory.products" 
                  :key="product.id"
                  :to="`/product/${product.id}`"
                  class="product-link"
                >
                  {{ product.name }}
                </router-link>
              </div>
            </div>
          </li>
        </ul>
      </li>
    </ul>
  </div>
</template>

<script>
import productData from '../../assets/hermi_product_center.json'

export default {
  name: 'SideBar',
  data() {
    return {
      categories: productData,
      activeSubmenu: null,
      timeoutId: null
    }
  },
  methods: {
    showSubmenu(event) {
      if (this.timeoutId) {
        clearTimeout(this.timeoutId);
      }
      
      const menuItem = event.target.closest('.nav-item');
      if (!menuItem) return;
      
      const currentSubmenu = menuItem.querySelector('.dropdown-menu');
      if (currentSubmenu) {
        if (this.activeSubmenu && this.activeSubmenu !== currentSubmenu) {
          this.activeSubmenu.style.display = 'none';
        }
        currentSubmenu.style.display = 'block';
        this.activeSubmenu = currentSubmenu;
      }
    },

    handleMouseLeave(event) {
      if (this.timeoutId) {
        clearTimeout(this.timeoutId);
      }
      
      this.timeoutId = setTimeout(() => {
        const menuItem = event.target.closest('.nav-item');
        const submenu = menuItem?.querySelector('.dropdown-menu');
        const relatedTarget = event.relatedTarget;
        
        if (submenu && 
            !menuItem?.contains(relatedTarget) && 
            !submenu.contains(relatedTarget)) {
          submenu.style.display = 'none';
          this.activeSubmenu = null;
        }
      }, 100);
    }
  }
}
</script>

<style scoped>
/* 基础样式重置和容器设置 */
.tech-nav {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    --primary-color: #0071e3;
    --hover-bg: rgba(0, 0, 0, 0.04);
    --text-primary: #1d1d1f;
    --text-secondary: #86868b;
}

/* 主菜单项样式 */
.tech-nav .nav-item {
    position: relative;
    color: var(--text-primary);
    font-weight: 450;
    padding: 12px 20px;
    margin: 4px 12px;
    border-radius: 12px;
    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    cursor: pointer;
}

.tech-nav .nav-item:hover {
    background-color: var(--hover-bg);
    transform: translateX(4px);
}

/* 标题样式 */
.sidebar h2 {
    text-align: center;
    padding: 16px 0;
    margin-bottom: 16px;
    font-size: 1.6em;
    font-weight: 600;
    background: linear-gradient(135deg, #0071e3, #40a9ff);
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    letter-spacing: -0.5px;
}

/* 子菜单容器 */
.tech-nav .dropdown-menu {
    position: absolute;
    left: 100%;
    top: 0;
    min-width: 1000px;
    max-width: 1200px;
    max-height: 80vh;
    overflow-y: auto;
    padding: 8px;
    margin-left: 8px;
    border-radius: 16px;
    background: rgba(255, 255, 255, 0.98);
    backdrop-filter: blur(25px);
    -webkit-backdrop-filter: blur(25px);
    box-shadow: 
        0 4px 6px -1px rgba(0, 0, 0, 0.1),
        0 2px 4px -1px rgba(0, 0, 0, 0.06),
        0 0 0 1px rgba(0, 0, 0, 0.05);
    opacity: 0;
    transform: translateX(-10px);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    display: none;
    pointer-events: auto;
    z-index: 1000;
}

.tech-nav .nav-item:hover .dropdown-menu {
    display: block;
    opacity: 1;
    transform: translateX(0);
}

/* 箭头样式 */
.arrow {
  position: absolute;
  right: 12px;
  font-size: 18px;
  color: var(--text-secondary);
  transition: transform 0.2s ease;
}

.nav-item:hover .arrow {
  transform: translateX(4px);
}

/* 子菜单项 */
.tech-nav .dropdown-menu li {
    padding: 10px 16px;
    margin: 4px;
    border-radius: 8px;
    color: var(--text-primary);
    font-size: 14px;
    transition: all 0.2s ease;
}

.tech-nav .dropdown-menu li:hover {
    background-color: var(--hover-bg);
    transform: translateX(4px);
}

/* 子菜单项新样式 */
.submenu-item {
  display: flex;
  flex-direction: column;
  gap: 12px;
  width: 100%;
}

.subcategory-name {
  width: 100%;
  font-weight: 600;
  color: var(--text-primary);
  border-radius: 6px;
  font-size: 16px;
  display: block;
}

.product-list {
  width: 100%;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
  gap: 8px;
}

.product-link {
  color: var(--text-secondary);
  text-decoration: none;
  transition: color 0.2s ease;
}

.product-link:hover {
  color: var(--primary-color);
  background-color: var(--hover-bg);  /* 添加悬停背景色 */
  transform: translateX(4px);  /* 添加悬停动画效果 */
}

.nav-item-title {
  display: block;  /* 确保元素占据整行 */
  padding-bottom: 4px;  /* 添加底部内边距 */
  margin-bottom: 2px;  /* 添加底部外边距 */
  border-bottom: 1px dashed rgba(7, 7, 7, 0.08);  /* 调整虚线颜色透明度和粗细 */
  font-size: 15px;
  transition: all 0.2s ease;
  position: relative;  /* 为箭头定位提供参考 */
  width: 100%;  /* 确保宽度充满容器 */
}

</style>